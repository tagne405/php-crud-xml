XMLHttpRequest (XHR) est une API JavaScript utilisée pour envoyer des requêtes HTTP ou HTTPS à un serveur et recevoir des réponses. Elle permet aux pages web d'envoyer et de recevoir des données de manière asynchrone à partir d'un serveur sans avoir besoin de recharger la page.

XHR peut être utilisé pour récupérer des données depuis un serveur dans une variété de formats, tels que XML, HTML ou JSON, et peut être utilisé pour mettre à jour dynamiquement certaines parties d'une page web. Elle est couramment utilisée dans les applications web pour mettre en œuvre des fonctionnalités telles que les boîtes de recherche avec autocomplétion, le défilement infini et les mises à jour en temps réel.

Pour utiliser XHR, vous créez d'abord une nouvelle instance de l'objet XMLHttpRequest, puis vous spécifiez la méthode HTTP (par exemple, GET, POST) et l'URL de la requête, et éventuellement incluez des paramètres de requête. Vous pouvez ensuite enregistrer une fonction de rappel qui sera appelée lorsque le serveur répondra à la requête.

Voici un exemple d'utilisation de XHR pour récupérer des données depuis un serveur et mettre à jour une page web :


var xhttp = new XMLHttpRequest();
xhttp.onreadystatechange = function() {
  if (this.readyState == 4 && this.status == 200) {
    // Mettre à jour la page web avec les données de réponse
    document.getElementById("demo").innerHTML = this.responseText;
  }
};

xhttp.open("GET", "https://exemple.com/donnees", true);
xhttp.send();
Dans cet exemple, la fonction onreadystatechange est appelée chaque fois que la propriété readyState de l'objet XHR change. Lorsque readyState est 4 (indiquant que la réponse est complète) et que le statut est 200 (indiquant une réponse réussie), les données de réponse sont utilisées pour mettre à jour la page web avec la propriété innerHTML de l'élément HTML spécifié.